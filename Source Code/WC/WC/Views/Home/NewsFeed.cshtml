@using WC.Data
@model WC.Models.NewsfeedViewModel
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new CyberEntities();
}

<script type="text/javascript">
    function PostStatus() {
        var url = '@Url.Action("PostStatus", "Post")';
        var text = $("#status-content").val();
        if (text === "") return;

        $.post(url, { "postedOn": '@Model.Id', "content": text },
            function(data) {
                if (data === "Failed") {
                    alert("Unable to post your status. Please try again later. Thank you!");
                } else {
                    $("#timeline-posts").prepend(data);
                    $("#status-content").val('');
                }
            });
    }
</script>

<script type="text/javascript">
    $(document).on('click', '.post-visible-type', function () {
        var postId = $(this).data("id");
        var current = $("#post-visible-type-" + postId);
        var changedType = $(this).data("visible-type");

        var newContent = "<span class = 'fa fa-" + changedType + "'></span> <span class='caret'></span>";

        current.attr("data-visible-type", changedType);
        current.html(newContent);

        var url = '@Url.Action("ChangePostVisibleType", "Post")';

        $.post(url, { "postId": postId, "visibility": changedType },
            function (data) {
                if (data === "Failed") {
                    alert("Unable to peform your action. Please try again later.");
                } else if (data === "Delete") {
                    alert("Post deleted.");
                }
            });
    });
</script>
<script>
    function pasteIntoInput(el, text) {
        el.focus();
        if (typeof el.selectionStart == "number"
            && typeof el.selectionEnd == "number") {
            var val = el.value;
            var selStart = el.selectionStart;
            el.value = val.slice(0, selStart) + text + val.slice(el.selectionEnd);
            el.selectionEnd = el.selectionStart = selStart + text.length;
        } else if (typeof document.selection != "undefined") {
            var textRange = document.selection.createRange();
            textRange.text = text;
            textRange.collapse(false);
            textRange.select();
        }
    }

    $(document).ready(function() {

        //focus on comment text box when click on Comment text
        $(document).on('click', '.comment-text', function() {
            var postId = $(this).attr("post-id");
            $('#comment-area-' + postId).focus();
            return false;
        });

        //auto submit comment when user press enter, add new line if Shift+Enter
        $(document).on('keydown', '.comment-form', function(e) {
            if (e.which === 13) {
                if (e.shiftKey === false) {
                    var url = '@Url.Action("PostComment", "Post")';
                    var text = $(this).val();
                    var textbox = $(this);
                    var postid = $(this).attr("post-id");
                    if (text === "") return;

                    $.post(url, { "postId": postid, "content": text },
                        function(data) {
                            if (data === "Failed") {
                                alert("Unable to post your comment. Please try again later. Thank you!");
                            } else {
                                var countItem = document.getElementById("comment-count-" + postid);
                                var count = parseInt(countItem.textContent) + 1;
                                countItem.textContent = count;

                                var commentList = $("#comment-list-" + postid);
                                commentList.append(data);
                            }
                        });

                        textbox.val('');
                } else {
                    pasteIntoInput(this, "\n");
                    e.preventDefault();
                }
            }
        });

        //like/unlike and update like count
        $(document).on('click', '.post-like', function () {
            var inprocess = $(this).attr("data-inprocess");
            if (inprocess === "1") {
                return false;
            }
            var curElement = $(this);
            $(this).attr("data-inprocess", "1");
            var postid = $(this).attr("post-id");
            var isLike = $(this).attr("data-toogle") === "Like";
            var url = '@Url.Action("LikeUnlikePost", "Post")';

            $.post(url, { "postId": postid, "isLike": isLike },
                function(data) {
                    if (data === "Failed") {
                        alert("Unable to peform your action. Please try again later.");
                    } else if (data === "Deleted") {
                        alert("This item has been deleted.");
                    } else if (data !== "AlreadyDone") {
                        var countItem = document.getElementById("post-like-count-" + postid);
                        var count = data;

                        if (isLike) {
                            curElement.attr("data-toogle", "Unlike");
                        } else {
                            curElement.attr("data-toogle", "Like");
                        }
                        countItem.textContent = count;

                        var likeStatus = document.getElementById("post-like-status-" + postid);
                        likeStatus.innerHTML = curElement.attr("data-toogle");
                    }
                    curElement.attr("data-inprocess", "0");
                });
            return false;
        });

        //like/unlike and update like count
        $(document).on('click', '.comment-like', function () {
            var inprocess = $(this).attr("data-inprocess");
            if (inprocess === "1") {
                return false;
            }
            var curElement = $(this);
            $(this).attr("data-inprocess", "1");
            var commentid = $(this).attr("comment-id");
            var isLike = $(this).attr("data-toogle") === "Like";
            var url = '@Url.Action("LikeUnlikeComment", "Post")';

            $.post(url, { "commentId": commentid, "isLike": isLike },
                function(data) {
                    if (data === "Failed") {
                        alert("Unable to peform your action. Please try again later.");
                    } else if (data === "Deleted") {
                        alert("This item has been deleted.");
                    } else if (data !== "AlreadyDone") {
                        var countItem = document.getElementById("comment-like-count-" + commentid);
                        var count = data;

                        if (isLike) {
                            curElement.attr("data-toogle", "Unlike");
                        } else {
                            curElement.attr("data-toogle", "Like");
                        }
                        countItem.textContent = count;

                        var likeStatus = document.getElementById("comment-like-status-" + commentid);
                        likeStatus.innerHTML = curElement.attr("data-toogle");
                    }
                    curElement.attr("data-inprocess", "0");
                });
            return false;
        });

        //Show edit modal dialog
        $(document).on('click', '.edit-command', function() {
            var recipient = $(this).data('id');
            var actionType = $(this).data('type');
            $("#button-edit").data('id', recipient);
            $("#button-edit").data('type', actionType);

            var title = $('#edit-modal-label');
            title.text('Edit ' + actionType);


            if (actionType === "Post") {
                var postUrl = '@Url.Action("EditPost", "Post")';


                $.post(postUrl, { "postId": recipient },
                    function(data) {
                        if (data === "Failed") {
                            alert("Unable to edit this post. Please try again later.");
                        } else if (data === "Deleted") {
                            alert("This post has already been deleted.");
                        } else {
                            var content = $('#message-text');
                            content.val(data);
                            content.css('min-height', '50px').autogrow();
                        }
                    });
            } else {
                var commentUrl = '@Url.Action("EditComment", "Post")';

                $.post(commentUrl, { "commentId": recipient },
                    function(data) {
                        if (data === "Failed") {
                            alert("Unable to edit this comment. Please try again later.");
                        } else if (data === "Deleted") {
                            alert("This comment has already been deleted.");
                        } else {
                            var content = $('#message-text');
                            content.val(data);
                            content.css('min-height', '50px').autogrow();
                        }
                    });
            }
        });

        //update post/comment
        $("#button-edit").click(function() {
            var recipient = $(this).data('id');
            var actionType = $(this).data('type');
            var content = $('#message-text').val();

            if (actionType === "Post") {
                var postUrl = '@Url.Action("UpdatePost", "Post")';

                $.post(postUrl, { "postId": recipient, "content": content },
                    function(data) {
                        if (data === "Failed") {
                            alert("Unable to edit this post. Please try again later.");
                        } else if (data === "Deleted") {
                            alert("This post has already been deleted.");
                        } else {
                            var editedContent = $('#post-edit-' + recipient);
                            editedContent.text(content);
                        }
                    });
            } else {
                var commentUrl = '@Url.Action("UpdateComment", "Post")';

                $.post(commentUrl, { "commentId": recipient, "content": content },
                    function(data) {
                        if (data === "Failed") {
                            alert("Unable to edit this comment. Please try again later.");
                        } else if (data === "Deleted") {
                            alert("This comment has already been deleted.");
                        } else {
                            var editedContent = $('#comment-edit-' + recipient);
                            editedContent.text(content);
                        }
                    });
            }
            $("#button-edit-close").click();
        });

        //call confirm delete post
        $(document).on('click', '.delete-post-command', function() {
            var postid = $(this).attr("post-id");
            $('#button-post-delete').attr('post-id', postid);
        });

        //delete post
        $('#button-post-delete').click(function() {
            var postid = $(this).attr("post-id");
            var url = '@Url.Action("DeletePost", "Post")';

            $.post(url, { "postId": postid },
                function(data) {
                    if (data === "Failed") {
                        alert("Unable to delete this post. Please try again later.");
                    } else if (data === "Deleted") {
                        alert("This post has already been deleted.");
                    } else {
                        $('#button-post-close').click();
                        var element = document.getElementById('post-block-' + postid);
                        element.parentNode.removeChild(element);
                    }
                });
        });

        //call confirm delete commment dialog
        $(document).on('click', '.delete-comment-command', function() {
            var commentid = $(this).attr("comment-id");
            $('#button-comment-delete').attr('comment-id', commentid);
        });

        //delete comment
        $('#button-comment-delete').click(function() {
            var commentid = $(this).attr("comment-id");
            var url = '@Url.Action("DeleteComment", "Post")';

            $.post(url, { "commentId": commentid },
                function(data) {
                    if (data === "Failed") {
                        alert("Unable to delete this comment. Please try again later.");
                    } else if (data === "Deleted") {
                        alert("This comment has already been deleted.");
                    } else {
                        $('#button-comment-close').click();
                        $('#comment-block-' + commentid).remove();
                        var countItem = document.getElementById("comment-count-" + data);
                        var count = parseInt(countItem.textContent) - 1;
                        countItem.textContent = count;
                    }
                });
        });
    });
</script>
<link href="~/Content/Style/loading.css" rel="stylesheet" type="text/css">

<input type="hidden" id="hidden-user-id" value="@Model.Id" />

<div class="page-inner" style="min-height: 1080px !important">
    <div id="main-wrapper">
        <div class="row">
            <div class="col-md-7 m-t-lg">
                <div class="panel panel-white">
                    <div class="panel-body">
                        <div class="post">
                            <textarea id="status-content" class="form-control" placeholder="What's in your mind?" rows="4=6"></textarea>
                            <div class="post-options">
                                <a href="#"><i class="icon-camera"></i></a>
                                <a href="#"><i class="icon-camcorder"></i></a>
                                <a href="#"><i class="icon-music-tone-alt"></i></a>
                                <a href="#"><i class="icon-link"></i></a>
                                <a href="#"><i class="icon-microphone"></i></a>
                                <button class="btn btn-facebook pull-right" onclick=" PostStatus(); ">Post</button>
                                @{ Html.RenderPartial("_SelectVisibility", Model.Setting); }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="profile-timeline">
                    <ul class="list-unstyled" id="timeline-posts">
                        @if (Model.Posts.Count > 0)
                        {
                            Html.RenderAction("PostList", "Post", new { Model = Model.Posts as List<Post> });
                        }
                    </ul>
                </div>
                <div id="circularG" class="cssload-loader" style="display: none">
                    <div class="cssload-inner cssload-one"></div>
                    <div class="cssload-inner cssload-two"></div>
                    <div class="cssload-inner cssload-three"></div>
                </div>
                <div id="no-more-post" class="panel panel-white" role="alert" style="display: none">
                    <div class="panel-body text-center">
                        <strong>No more post!</strong>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var NoMoreData = false;
    var inProgress = false;

    $(window).scroll(function () {
        if ($(window).scrollTop() === $(document).height() -
            $(window).height() && !NoMoreData && !inProgress) {

            inProgress = true;
            $("#circularG").show();
            var delay = 500; //half seconds

            setTimeout(function () {
                var currentUser = $("#hidden-user-id").val();
                var postCount = document.querySelectorAll('[id^=post-block]').length;

                $.post("@Url.Action("LoadMorePost","Post")", { "userId": currentUser, "loadedPostCount": postCount },
                    function (data) {
                        NoMoreData = data.NoMore;
                        $("#timeline-posts").append(data.Posts);
                        $("#circularG").hide();
                        inProgress = false;
                        if (NoMoreData) {
                            $("#no-more-post").show();
                        }
                    });
            }, delay);
        }
    });
</script>