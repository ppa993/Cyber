@model WC.Models.ProfileViewModel
@{
    ViewBag.Title = Model.DisplayName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function PostStatus() {
        var url = '@Url.Action("PostStatus")';
        var text = $("#status-content").val();
        if (text === "") return;

        $.post(url, { "postedOn": '@Model.Id',  "content": text },
            function (data) {
                if (data === "Failed") {
                    alert("Unable to post your status. Please try again later. Thank you!");
                } else {
                    $("#timeline-posts").prepend(data);
                    $("#status-content").val('');
                }
            });
    }
    function pasteIntoInput(el, text) {
        el.focus();
        if (typeof el.selectionStart == "number"
            && typeof el.selectionEnd == "number") {
            var val = el.value;
            var selStart = el.selectionStart;
            el.value = val.slice(0, selStart) + text + val.slice(el.selectionEnd);
            el.selectionEnd = el.selectionStart = selStart + text.length;
        } else if (typeof document.selection != "undefined") {
            var textRange = document.selection.createRange();
            textRange.text = text;
            textRange.collapse(false);
            textRange.select();
        }
    }
</script>
<script>
    $(document).ready(function () {
        //auto expand textarea base on number of text lines
        $('textarea').css('overflow', 'hidden').autogrow();

        //focus on comment text box when click on Comment text
        $(document).on('click', '.comment-text', function() {
            var postId = $(this).attr("post-id");
            $('#comment-area-' + postId).focus();
            return false;
        });

        //auto submit comment when user press enter, add new line if Shift+Enter
        $(document).on('keydown', '.comment-form', function(e) {
            if (e.which === 13) {
                if (e.shiftKey === false) {
                    var url = '@Url.Action("PostComment")';
                    var text = $(this).val();
                    var textbox = $(this);
                    var postid = $(this).attr("post-id");
                    if (text === "") return;

                    $.post(url, { "postId": postid, "content": text },
                        function(data) {
                            if (data === "Failed") {
                                alert("Unable to post your comment. Please try again later. Thank you!");
                            } else {
                                var countItem = document.getElementById("comment-count-" + postid);
                                var count = parseInt(countItem.textContent) + 1;
                                countItem.textContent = count;

                                var commentList = $("#comment-list-" + postid);
                                commentList.append(data);
                                textbox.val('');
                            }
                        });
                } else {
                    pasteIntoInput(this, "\n");
                    e.preventDefault();
                }
            }
        });
        
        //like/unlike and update like count
        $(document).on('click', '.post-like', function() {
            var curElement = $(this);
            var postid = $(this).attr("post-id");
            var isLike = $(this).attr("data-toogle") === "Like";
            var url = '@Url.Action("LikeUnlikePost")';

            $.post(url, { "postId": postid, "isLike": isLike },
                function(data) {
                    if (data === "Failed") {
                        alert("Unable to peform your action. This item has been removed.");
                    } else {
                        var countItem = document.getElementById("post-like-count-" + postid);
                        var count = data;

                        if (isLike) {
                            curElement.attr("data-toogle", "Unlike");
                        } else {
                            curElement.attr("data-toogle", "Like");
                        }
                        countItem.textContent = count;

                        var likeStatus = document.getElementById("post-like-status-" + postid);
                        likeStatus.innerHTML = curElement.attr("data-toogle");
                    }
                });
            return false;
        });

        //like/unlike and update like count
        $(document).on('click', '.comment-like', function() {
            var curElement = $(this);
            var commentid = $(this).attr("comment-id");
            var isLike = $(this).attr("data-toogle") === "Like";
            var url = '@Url.Action("LikeUnlikeComment")';

            $.post(url, { "commentId": commentid, "isLike": isLike },
                function(data) {
                    if (data === "Failed") {
                        alert("Unable to peform your action. This item has been removed.");
                    } else {
                        var countItem = document.getElementById("comment-like-count-" + commentid);
                        var count = data;

                        if (isLike) {
                            curElement.attr("data-toogle", "Unlike");
                        } else {
                            curElement.attr("data-toogle", "Like");
                        }
                        countItem.textContent = count;

                        var likeStatus = document.getElementById("comment-like-status-" + commentid);
                        likeStatus.innerHTML = curElement.attr("data-toogle");
                    }
                });
            return false;
        });

        //Show edit modal dialog
        $(document).on('click', '.edit-command', function() {
            var recipient = $(this).data('id');
            var actionType = $(this).data('type');
            $("#button-edit").data('id', recipient);
            $("#button-edit").data('type', actionType);

            var title = $('#edit-modal-label');
            title.text('Edit ' + actionType);

            var button = $('#button-edit');
            button.text('Edit ' + actionType);

            if (actionType === "Post") {
                var postUrl = '@Url.Action("EditPost")';
                

                $.post(postUrl, { "postId": recipient },
                    function(data) {
                        if (data === "Failed") {
                            alert("Unable to edit this post. Please try again later.");
                        } else if (data === "Deleted") {
                            alert("This post has already been deleted.");
                        } else {
                            var content = $('#message-text');
                            content.val(data);
                            content.css('min-height', '50px').autogrow();
                        }
                    });
            } else {
                var commentUrl = '@Url.Action("EditComment")';

                $.post(commentUrl, { "commentId": recipient },
                    function (data) {
                        if (data === "Failed") {
                            alert("Unable to edit this comment. Please try again later.");
                        } else if (data === "Deleted") {
                            alert("This comment has already been deleted.");
                        } else {
                            var content = $('#message-text');
                            content.val(data);
                            content.css('min-height', '50px').autogrow();
                        }
                    });
            }
        });

        //update post/comment
        $("#button-edit").click(function() {
            var recipient = $(this).data('id');
            var actionType = $(this).data('type');
            var content = $('#message-text').val();

            if (actionType === "Post") {
                var postUrl = '@Url.Action("UpdatePost")';

                $.post(postUrl, { "postId": recipient, "content": content },
                    function(data) {
                        if (data === "Failed") {
                            alert("Unable to edit this post. Please try again later.");
                        } else if (data === "Deleted") {
                            alert("This post has already been deleted.");
                        } else {
                            var editedContent = $('#post-edit-' + recipient);
                            editedContent.text(content);
                        }
                    });
            } else {
                var commentUrl = '@Url.Action("UpdateComment")';

                $.post(commentUrl, { "commentId": recipient, "content": content },
                    function (data) {
                        if (data === "Failed") {
                            alert("Unable to edit this comment. Please try again later.");
                        } else if (data === "Deleted") {
                            alert("This comment has already been deleted.");
                        } else {
                            var editedContent = $('#comment-edit-' + recipient);
                            editedContent.text(content);
                        }
                    });
            }
            $("#button-edit-close").click();
        });

        //call confirm delete post
        $(document).on('click', '.delete-post-command', function() {
            var postid = $(this).attr("post-id");
            $('#button-post-delete').attr('post-id', postid);
        });

        //delete post
        $('#button-post-delete').click(function() {
            var postid = $(this).attr("post-id");
            var url = '@Url.Action("DeletePost")';

            $.post(url, { "postId": postid },
                function(data) {
                    if (data === "Failed") {
                        alert("Unable to delete this post. Please try again later.");
                    } else if (data === "Deleted") {
                        alert("This post has already been deleted.");
                    } else {
                        $('#button-post-close').click();
                        var element = document.getElementById('post-block-' + postid);
                        element.parentNode.removeChild(element);
                    }
                });
        });

        //call confirm delete commment dialog
        $(document).on('click', '.delete-comment-command', function() {
            var commentid = $(this).attr("comment-id");
            $('#button-comment-delete').attr('comment-id', commentid);
        });

        //delete comment
        $('#button-comment-delete').click(function() {
            var commentid = $(this).attr("comment-id");
            var url = '@Url.Action("DeleteComment")';

            $.post(url, { "commentId": commentid },
                function(data) {
                    if (data === "Failed") {
                        alert("Unable to delete this comment. Please try again later.");
                    } else if (data === "Deleted") {
                        alert("This comment has already been deleted.");
                    } else {
                        $('#button-comment-close').click();
                        $('#comment-block-' + commentid).remove();
                        var countItem = document.getElementById("comment-count-" + data);
                        var count = parseInt(countItem.textContent) - 1;
                        countItem.textContent = count;
                    }
                });
        });
    });
</script>

<div class="modal fade" id="delete-post-modal" tabindex="-1" role="dialog" aria-labelledby="myModalPostLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalPostLabel">Delete Post</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="button-post-close" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-facebook" id="button-post-delete" post-id="">Delete Post</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="delete-comment-modal" tabindex="-1" role="dialog" aria-labelledby="myModalCommentLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalCommentLabel">Delete Comment</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="button-comment-close" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-facebook" id="button-comment-delete" comment-id="">Delete Comment</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="edit-modal" tabindex="-1" role="dialog" aria-labelledby="edit-modal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="edit-modal-label">Edit</h4>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <textarea class="form-control" id="message-text"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="button-edit-close" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="button-edit" class="btn btn-facebook" data-type="" data-id="">Edit</button>
            </div>
        </div>
    </div>
</div>

<div class="page-inner" style="min-height:1080px !important">
    <div class="profile-cover">
        <div class="row">
            <div class="col-md-3 profile-image">
                <div class="profile-image-container">
                    <img src="@Url.Content(Model.Avatar)" alt="">
                </div>
            </div>
            <div class="col-md-12 profile-info">
                @*<div class=" profile-info-value">
                    <h3>1020</h3>
                    <p>Followers</p>
                </div>*@
                <div class=" profile-info-value">
                    <h3>@Model.Friends.Friends.Count</h3>
                    <p>Friends</p>
                </div>
                <div class=" profile-info-value">
                    <h3>260</h3>
                    <p>Photos</p>
                </div>
            </div>
        </div>
    </div>
    <div id="main-wrapper">
        <div class="row">
            <div class="col-md-3 user-profile">
                <h3 class="text-center">@Model.DisplayName</h3>
                @*<p class="text-center">UI/UX Designer</p>*@
                <hr>
                <ul class="list-unstyled text-center">
                    <li><p><i class="fa fa-map-marker m-r-xs"></i>@Model.Address</p></li>
                    <li><p><i class="fa fa-envelope m-r-xs"></i><a href="mailto:@Model.Email">@Model.Email</a></p></li>
                    <li><p><i class="fa fa-link m-r-xs"></i><a href="#">www.themeforest.net</a></p></li>
                </ul>
                <hr>
                <button class="btn btn-facebook btn-block"><i class="fa fa-plus m-r-xs"></i>Add Friend</button>
            </div>
            <div class="col-md-6 m-t-lg">
                @if (Model.AllowOtherToPost || Model.IsMyTimeline)
                {
                    <div class="panel panel-white">
                        <div class="panel-body">
                            <div class="post">
                                <textarea id="status-content" class="form-control" placeholder="What's in your mind?" rows="4=6"></textarea>
                                <div class="post-options">
                                    <a href="#"><i class="icon-camera"></i></a>
                                    <a href="#"><i class="icon-camcorder"></i></a>
                                    <a href="#"><i class="icon-music-tone-alt"></i></a>
                                    <a href="#"><i class="icon-link"></i></a>
                                    <a href="#"><i class="icon-microphone"></i></a>
                                    <button class="btn btn-facebook pull-right" onclick=" PostStatus(); ">Post</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="profile-timeline">
                    <ul class="list-unstyled" id="timeline-posts">
                        @if (Model.Posts.Count > 0)
                        {
                            Html.RenderAction("PostList", "Home", new {Model = Model.Posts as List<WC.Data.Post>});
                        }
                        </ul>
                </div>
            </div>
            <div class="col-md-3 m-t-lg">
                <div class="panel panel-white">
                    <div class="panel-heading">
                        <div class="panel-title">Friends</div>
                    </div>
                    <div class="panel-body">
                        <div class="team">
                            <div class="team-member">
                                <div class="online on"></div>
                                <img src="~/Content/Images/avatar1.png" alt="">
                            </div>
                            <div class="team-member">
                                <div class="online off"></div>
                                <img src="~/Content/Images/avatar2.png" alt="">
                            </div>
                            <div class="team-member">
                                <div class="online on"></div>
                                <img src="~/Content/Images/avatar3.png" alt="">
                            </div>
                            <div class="team-member">
                                <div class="online on"></div>
                                <img src="~/Content/Images/avatar5.png" alt="">
                            </div>
                            <div class="team-member">
                                <div class="online on"></div>
                                <img src="~/Content/Images/avatar1.png" alt="">
                            </div>
                            <div class="team-member">
                                <div class="online off"></div>
                                <img src="~/Content/Images/avatar2.png" alt="">
                            </div>
                            <div class="team-member">
                                <div class="online on"></div>
                                <img src="~/Content/Images/avatar3.png" alt="">
                            </div>
                            <div class="team-member">
                                <div class="online on"></div>
                                <img src="~/Content/Images/avatar5.png" alt="">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-white">
                    <div class="panel-heading">
                        <div class="panel-title">Some Info</div>
                    </div>
                    <div class="panel-body">
                        <p>@Model.About</p>
                    </div>
                </div>
                <div class="panel panel-white">
                    <div class="panel-heading">
                        <div class="panel-title">Skills</div>
                    </div>
                    <div class="panel-body">
                        <p>HTML5</p>
                        <div class="progress progress-xs">
                            <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100" style="width: 80%">
                            </div>
                        </div>
                        <p>PHP</p>
                        <div class="progress progress-xs">
                            <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 60%">
                            </div>
                        </div>
                        <p>Javascript</p>
                        <div class="progress progress-xs">
                            <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width: 70%">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>